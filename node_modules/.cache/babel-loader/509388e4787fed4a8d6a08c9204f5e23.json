{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Constants } from '../commonData/Constants';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      taskTypes: Constants.Types,\n      type: 0,\n      DateTime: null,\n      tasks: Constants.Tasks,\n      added: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addtask = this.addtask.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      added: false\n    });\n  }\n\n  addtask(e) {\n    console.log(this.state.title);\n    console.log(this.state.DateTime);\n    return;\n\n    if (this.state.title !== ' ' && this.state.DateTime !== null) {\n      this.setState({\n        added: true\n      });\n      let newTask = {\n        \"id\": localStorage.getItem('count') + 1,\n        \"name\": this.state.title,\n        \"desciption\": this.state.description,\n        \"type\": this.state.type,\n        \"Duedate\": this.state.DateTime\n      };\n      let allTasks = [];\n      Object.values(this.props.tasks).map(item => {\n        allTasks.push(item);\n      });\n      allTasks.push(newTask);\n      this.props.updateTasks(allTasks);\n    }\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      DateTime: date\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      type,\n      taskTypes,\n      DateTime,\n      added\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: 'Create task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.Form, {\n        style: {\n          width: '600px',\n          height: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Title', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"title\",\n              value: title,\n              type: \"text\",\n              style: {\n                marginBottom: '15px',\n                width: '250px',\n                borderColor: \"black\",\n                borderWidth: '3px'\n              },\n              placeholder: \"Task title\",\n              onChange: this.handleChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 14\n          }, this), added === true && title === '' && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red',\n              fontSize: '15px'\n            },\n            children: \"Title field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: 'Description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"description\",\n              value: description,\n              type: \"textarea\",\n              style: {\n                marginBottom: '15px',\n                width: '250px',\n                borderColor: \"black\",\n                borderWidth: '3px'\n              },\n              placeholder: \"Description\",\n              onChange: this.handleChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Type', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n              as: \"select\",\n              name: \"type\",\n              className: \"input_sw\",\n              value: type,\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 24\n              }, this), Object.values(taskTypes).map(taskType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: taskType.id,\n                children: taskType.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 66\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Due at', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n              onChange: e => this.handleDateChange(e),\n              value: DateTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 18\n            }, this), added === true && DateTime === null && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'red',\n                fontSize: '15px'\n              },\n              children: \"DateTime field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.Button, {\n            style: {\n              float: 'left',\n              backgroundColor: '#EC661C',\n              borderColor: \"black\",\n              marginBottom: '25px',\n              marginTop: '25px',\n              width: '80px'\n            },\n            type: \"button\",\n            onClick: e => this.addtask(e),\n            children: 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","DateTimePicker","Constants","CreateTask","constructor","props","state","title","description","taskTypes","Types","type","DateTime","tasks","Tasks","added","handleChange","bind","addtask","e","name","value","target","setState","console","log","newTask","localStorage","getItem","allTasks","Object","values","map","item","push","updateTasks","handleDateChange","date","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","taskType","id","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Constants } from '../commonData/Constants';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      description: '',\n      taskTypes: Constants.Types,\n      type: 0,\n      DateTime: null,\n      tasks: Constants.Tasks,\n      added: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addtask = this.addtask.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value,\n      added: false,\n    })\n  }\n\n  addtask(e) {\n    console.log(this.state.title);\n    console.log(this.state.DateTime);\n    return\n    if (this.state.title !== ' ' && this.state.DateTime !== null) {\n      this.setState({\n        added: true,\n      })\n      let newTask = {\n        \"id\": localStorage.getItem('count') + 1,\n        \"name\": this.state.title,\n        \"desciption\": this.state.description,\n        \"type\": this.state.type,\n        \"Duedate\": this.state.DateTime,\n      }\n      let allTasks = [];\n      Object.values(this.props.tasks).map(item => {\n        allTasks.push(item);\n      })\n      allTasks.push(newTask)\n      this.props.updateTasks(allTasks)\n    }\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      DateTime: date,\n    })\n  }\n\n  render() {\n    const { title, description, type, taskTypes, DateTime, added } = this.state\n    return(\n      <reactbootstrap.Container className=\"pt-5 px-0\">\n        <div style={{ color: '#EC661C', fontSize: '20px'}} >\n            <span><h4>{'Create task'}</h4></span>\n        </div>\n        <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Title'}<span style={{ color: 'red' }}> * </span></label>\n               <input\n                 name=\"title\"\n                 value={title}\n                 type=\"text\"\n                 style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                 placeholder={\"Task title\"}\n                 onChange={this.handleChange}\n                 autoComplete=\"off\" />\n             </div>\n             {added === true && title === '' &&\n               <div style={{ color: 'red', fontSize: '15px' }}>{\"Title field is required\"}</div>\n             }\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Description'}</label>\n               <input\n                 name=\"description\"\n                 value={description}\n                 type=\"textarea\"\n                 style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                 placeholder={\"Description\"}\n                 onChange={this.handleChange}\n                 autoComplete=\"off\" />\n             </div>\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Type'}<span style={{ color: 'red' }}> * </span></label>\n                   <reactbootstrap.FormControl as=\"select\" name=\"type\"\n                       className=\"input_sw\"\n                       value={type}\n                       onChange={this.handleChange} >\n                       <option>Select type</option>\n                       {Object.values(taskTypes).map(taskType => <option value={taskType.id}>{taskType.name}</option>)}\n                   </reactbootstrap.FormControl>\n             </div>\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Due at'}<span style={{ color: 'red' }}> * </span></label>\n                 <DateTimePicker\n                   onChange={e => this.handleDateChange(e)}\n                   value={DateTime}\n                 />\n                 {added === true && DateTime === null &&\n                   <div style={{ color: 'red', fontSize: '15px' }}>{\"DateTime field is required\"}</div>\n                 }\n             </div>\n           </reactbootstrap.FormGroup>\n           <div>\n             <reactbootstrap.Button style={{ float: 'left', backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={e => this.addtask(e)}>\n                   {'Add'}\n             </reactbootstrap.Button>\n           </div>\n         </reactbootstrap.Form>\n       </reactbootstrap.Container>\n    );\n  }\n}\n\nexport default (CreateTask);\n"]},"metadata":{},"sourceType":"module"}