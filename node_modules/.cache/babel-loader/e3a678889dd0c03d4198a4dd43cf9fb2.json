{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Constants } from '../commonData/Constants';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      taskTypes: Constants.Types,\n      type: '',\n      dueDate: null,\n      dueTime: null,\n      tasks: Constants.Tasks\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addtask = this.addtask.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addtask(e) {\n    let newTask = {\n      \"name\": this.state.title,\n      \"desciption\": this.state.description,\n      \"type\": this.state.type,\n      \"due date\": this.state.DateTime\n    };\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      allTasks.push(item);\n    });\n    allTasks.push(newTask);\n    console.log(this.props.tasks);\n    console.log(allTasks); // localStorage.clear();\n    // localStorage.setItem('tasks', allTasks)\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      DateTime: date\n    });\n  }\n\n  render() {\n    console.log(this.state.taskTypes);\n    const {\n      title,\n      description,\n      type,\n      taskTypes,\n      DateTime\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: 'Create task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.Form, {\n        style: {\n          width: '600px',\n          height: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Title', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"title\",\n              value: title,\n              type: \"text\",\n              style: {\n                marginBottom: '15px',\n                width: '250px',\n                borderColor: \"black\",\n                borderWidth: '3px'\n              },\n              placeholder: \"Task title\",\n              onChange: this.handleChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Description', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 85\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"description\",\n              value: description,\n              type: \"textarea\",\n              style: {\n                marginBottom: '15px',\n                width: '250px',\n                borderColor: \"black\",\n                borderWidth: '3px'\n              },\n              placeholder: \"Description\",\n              onChange: this.handleChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Type', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n              as: \"select\",\n              name: \"type\",\n              className: \"input_sw\",\n              value: type,\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 24\n              }, this), Object.values(taskTypes).map(taskType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: taskType.name,\n                children: taskType.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 66\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            onChange: e => this.handleDateChange(e),\n            value: DateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.Button, {\n            style: {\n              float: 'left',\n              backgroundColor: '#EC661C',\n              borderColor: \"black\",\n              marginBottom: '25px',\n              marginTop: '25px',\n              width: '80px'\n            },\n            type: \"button\",\n            onClick: e => this.addtask(e),\n            children: 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","DateTimePicker","Constants","CreateTask","constructor","props","state","title","description","taskTypes","Types","type","dueDate","dueTime","tasks","Tasks","handleChange","bind","addtask","e","name","value","target","setState","newTask","DateTime","allTasks","Object","values","map","item","push","console","log","handleDateChange","date","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","taskType","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Constants } from '../commonData/Constants';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      description: '',\n      taskTypes: Constants.Types,\n      type: '',\n      dueDate: null,\n      dueTime: null,\n      tasks: Constants.Tasks,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addtask = this.addtask.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  addtask(e) {\n    let newTask = {\n      \"name\": this.state.title,\n      \"desciption\": this.state.description,\n      \"type\": this.state.type,\n      \"due date\": this.state.DateTime,\n    }\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      allTasks.push(item);\n    })\n    allTasks.push(newTask)\n    console.log(this.props.tasks);\n    console.log(allTasks);\n    // localStorage.clear();\n    // localStorage.setItem('tasks', allTasks)\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      DateTime: date,\n    })\n  }\n\n  render() {\n    console.log(this.state.taskTypes);\n    const { title, description, type, taskTypes, DateTime } = this.state\n    return(\n      <reactbootstrap.Container className=\"pt-5 px-0\">\n        <div style={{ color: '#EC661C', fontSize: '20px'}} >\n            <span><h4>{'Create task'}</h4></span>\n        </div>\n        <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Title'}<span style={{ color: 'red' }}> * </span></label>\n               <input\n                 name=\"title\"\n                 value={title}\n                 type=\"text\"\n                 style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                 placeholder={\"Task title\"}\n                 onChange={this.handleChange}\n                 autoComplete=\"off\" />\n             </div>\n             {/* {emailRequired === true &&\n               <div style={{ color: 'red', fontSize: '15px' }}>{\"userName field is required\"}</div>\n             }\n             {validEmail === false &&\n               <div style={{ color: 'red', fontSize: '15px' }}>{\"Please enter a proper Email-id\"}</div>\n             } */}\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Description'}<span style={{ color: 'red' }}> * </span></label>\n               <input\n                 name=\"description\"\n                 value={description}\n                 type=\"textarea\"\n                 style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                 placeholder={\"Description\"}\n                 onChange={this.handleChange}\n                 autoComplete=\"off\" />\n             </div>\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Type'}<span style={{ color: 'red' }}> * </span></label>\n                   <reactbootstrap.FormControl as=\"select\" name=\"type\"\n                       className=\"input_sw\"\n                       value={type}\n                       onChange={this.handleChange} >\n                       <option>Select type</option>\n                       {Object.values(taskTypes).map(taskType => <option value={taskType.name}>{taskType.name}</option>)}\n                   </reactbootstrap.FormControl>\n             </div>\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <DateTimePicker\n               onChange={e => this.handleDateChange(e)}\n               value={DateTime}\n             />\n           </reactbootstrap.FormGroup>\n           <div>\n             <reactbootstrap.Button style={{ float: 'left', backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={e => this.addtask(e)}>\n                   {'Add'}\n               </reactbootstrap.Button>\n           </div>\n         </reactbootstrap.Form>\n       </reactbootstrap.Container>\n    );\n  }\n}\n\nexport default (CreateTask);\n"]},"metadata":{},"sourceType":"module"}