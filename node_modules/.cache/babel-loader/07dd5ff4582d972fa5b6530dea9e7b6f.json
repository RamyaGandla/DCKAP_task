{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/CreateTask.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Constants } from '../commonData/Constants';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      taskTypes: Constants.Types,\n      type: 0,\n      DateTime: null,\n      tasks: Constants.Tasks,\n      added: false,\n      taskId: this.props.taskId\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addtask = this.addtask.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.taskId !== this.props.taskId) {\n      Object.values(this.props.tasks).map(item => {\n        if (Number(item.id) === Number(this.props.taskId)) {\n          this.setState({\n            added: false,\n            title: item.name,\n            description: item.desciption,\n            taskTypes: Constants.Types,\n            type: item.type,\n            DateTime: item.Duedate\n          });\n        }\n      });\n    }\n  } // componentWillMount() {\n  //   if (this.props.taskId !== null && this.props.taskId !== undefined) {\n  //     Object.values(this.props.tasks).map(item => {\n  //       if (Number(item.id) === Number(this.props.taskId)) {\n  //         this.setState({\n  //           added: false,\n  //           title: item.name,\n  //           description: item.desciption,\n  //           taskTypes: Constants.Types,\n  //           type: item.type,\n  //           DateTime: item.Duedate,\n  //         })\n  //       }\n  //     })\n  //   }\n  // }\n\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value,\n      added: false\n    });\n  }\n\n  addtask(e) {\n    this.setState({\n      added: true\n    });\n\n    if (this.state.title !== ' ' && this.state.DateTime !== null) {\n      let newTask = {\n        \"id\": localStorage.getItem('count') + 1,\n        \"name\": this.state.title,\n        \"desciption\": this.state.description,\n        \"type\": this.state.type,\n        \"Duedate\": this.state.DateTime,\n        \"taskCompleted\": 0,\n        \"status\": 0\n      };\n      let allTasks = [];\n      Object.values(this.props.tasks).map(item => {\n        allTasks.push(item);\n      });\n      allTasks.push(newTask);\n      this.props.updateTasks(allTasks);\n      this.setState({\n        added: false,\n        title: '',\n        description: '',\n        taskTypes: Constants.Types,\n        type: 0,\n        DateTime: null\n      });\n    }\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      DateTime: date\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      type,\n      taskTypes,\n      DateTime,\n      added\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: 'Create task'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.Form, {\n        style: {\n          width: '600px',\n          height: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Title', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"title\",\n              value: title,\n              type: \"text\",\n              style: {\n                marginBottom: '15px',\n                width: '250px',\n                borderColor: \"black\",\n                borderWidth: '3px'\n              },\n              placeholder: \"Task title\",\n              onChange: this.handleChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }, this), added === true && title === '' && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red',\n              fontSize: '15px'\n            },\n            children: \"Title field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: 'Description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"description\",\n              value: description,\n              type: \"textarea\",\n              style: {\n                marginBottom: '15px',\n                width: '250px',\n                borderColor: \"black\",\n                borderWidth: '3px'\n              },\n              placeholder: \"Description\",\n              onChange: this.handleChange,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Type', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n              as: \"select\",\n              name: \"type\",\n              className: \"input_sw\",\n              value: type,\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 24\n              }, this), Object.values(taskTypes).map(taskType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: taskType.id,\n                children: taskType.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 66\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginbottom: '15px',\n              border: '0px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: '#EC661C',\n                fontSize: '14px'\n              },\n              children: ['Due at', /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \" * \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n              onChange: e => this.handleDateChange(e),\n              value: DateTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 18\n            }, this), added === true && DateTime === null && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'red',\n                fontSize: '15px'\n              },\n              children: \"DateTime field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.Button, {\n            style: {\n              float: 'left',\n              backgroundColor: '#EC661C',\n              borderColor: \"black\",\n              marginBottom: '25px',\n              marginTop: '25px',\n              width: '80px'\n            },\n            type: \"button\",\n            onClick: e => this.addtask(e),\n            children: 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreateTask;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/CreateTask.js"],"names":["React","Component","reactbootstrap","DateTimePicker","Constants","CreateTask","constructor","props","state","title","description","taskTypes","Types","type","DateTime","tasks","Tasks","added","taskId","handleChange","bind","addtask","componentDidUpdate","prevProps","prevState","Object","values","map","item","Number","id","setState","name","desciption","Duedate","e","value","target","newTask","localStorage","getItem","allTasks","push","updateTasks","handleDateChange","date","render","color","fontSize","width","height","marginbottom","border","marginBottom","borderColor","borderWidth","taskType","float","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport DateTimePicker from 'react-datetime-picker';\nimport { Constants } from '../commonData/Constants';\n\nclass CreateTask extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: '',\n      description: '',\n      taskTypes: Constants.Types,\n      type: 0,\n      DateTime: null,\n      tasks: Constants.Tasks,\n      added: false,\n      taskId: this.props.taskId,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.addtask = this.addtask.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.taskId !== this.props.taskId) {\n      Object.values(this.props.tasks).map(item => {\n        if (Number(item.id) === Number(this.props.taskId)) {\n          this.setState({\n            added: false,\n            title: item.name,\n            description: item.desciption,\n            taskTypes: Constants.Types,\n            type: item.type,\n            DateTime: item.Duedate,\n          })\n        }\n      })\n    }\n  }\n\n  // componentWillMount() {\n  //   if (this.props.taskId !== null && this.props.taskId !== undefined) {\n  //     Object.values(this.props.tasks).map(item => {\n  //       if (Number(item.id) === Number(this.props.taskId)) {\n  //         this.setState({\n  //           added: false,\n  //           title: item.name,\n  //           description: item.desciption,\n  //           taskTypes: Constants.Types,\n  //           type: item.type,\n  //           DateTime: item.Duedate,\n  //         })\n  //       }\n  //     })\n  //   }\n  // }\n\n  handleChange(e) {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value,\n      added: false,\n    })\n  }\n\n  addtask(e) {\n    this.setState({\n      added: true,\n    })\n    if (this.state.title !== ' ' && this.state.DateTime !== null) {\n      let newTask = {\n        \"id\": localStorage.getItem('count') + 1,\n        \"name\": this.state.title,\n        \"desciption\": this.state.description,\n        \"type\": this.state.type,\n        \"Duedate\": this.state.DateTime,\n        \"taskCompleted\": 0,\n        \"status\": 0,\n      }\n      let allTasks = [];\n      Object.values(this.props.tasks).map(item => {\n        allTasks.push(item);\n      })\n      allTasks.push(newTask)\n      this.props.updateTasks(allTasks)\n      this.setState({\n        added: false,\n        title: '',\n        description: '',\n        taskTypes: Constants.Types,\n        type: 0,\n        DateTime: null,\n      })\n    }\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      DateTime: date,\n    })\n  }\n\n  render() {\n    const { title, description, type, taskTypes, DateTime, added } = this.state\n    return(\n      <reactbootstrap.Container className=\"pt-5 px-0\">\n        <div style={{ color: '#EC661C', fontSize: '20px'}} >\n            <span><h4>{'Create task'}</h4></span>\n        </div>\n        <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Title'}<span style={{ color: 'red' }}> * </span></label>\n               <input\n                 name=\"title\"\n                 value={title}\n                 type=\"text\"\n                 style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                 placeholder={\"Task title\"}\n                 onChange={this.handleChange}\n                 autoComplete=\"off\" />\n             </div>\n             {added === true && title === '' &&\n               <div style={{ color: 'red', fontSize: '15px' }}>{\"Title field is required\"}</div>\n             }\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Description'}</label>\n               <input\n                 name=\"description\"\n                 value={description}\n                 type=\"textarea\"\n                 style={{ marginBottom: '15px', width: '250px', borderColor: \"black\", borderWidth: '3px'}}\n                 placeholder={\"Description\"}\n                 onChange={this.handleChange}\n                 autoComplete=\"off\" />\n             </div>\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Type'}<span style={{ color: 'red' }}> * </span></label>\n                   <reactbootstrap.FormControl as=\"select\" name=\"type\"\n                       className=\"input_sw\"\n                       value={type}\n                       onChange={this.handleChange} >\n                       <option>Select type</option>\n                       {Object.values(taskTypes).map(taskType => <option value={taskType.id}>{taskType.name}</option>)}\n                   </reactbootstrap.FormControl>\n             </div>\n           </reactbootstrap.FormGroup>\n           <reactbootstrap.FormGroup>\n             <div style={{ marginbottom: '15px',border: '0px' }}>\n               <label style={{ color: '#EC661C', fontSize: '14px' }}>{'Due at'}<span style={{ color: 'red' }}> * </span></label>\n                 <DateTimePicker\n                   onChange={e => this.handleDateChange(e)}\n                   value={DateTime}\n                 />\n                 {added === true && DateTime === null &&\n                   <div style={{ color: 'red', fontSize: '15px' }}>{\"DateTime field is required\"}</div>\n                 }\n             </div>\n           </reactbootstrap.FormGroup>\n           <div>\n             <reactbootstrap.Button style={{ float: 'left', backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={e => this.addtask(e)}>\n                   {'Add'}\n             </reactbootstrap.Button>\n           </div>\n         </reactbootstrap.Form>\n       </reactbootstrap.Container>\n    );\n  }\n}\n\nexport default (CreateTask);\n"]},"metadata":{},"sourceType":"module"}