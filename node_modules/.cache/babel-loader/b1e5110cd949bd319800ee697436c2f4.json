{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/ManageTasks.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../commonData/Constants';\nimport { Form } from 'react-bootstrap';\n\nvar DateDiff = require('date-diff');\n\nclass ManageTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: this.props.tasks,\n      typeFilter: '',\n      statusFilter: '',\n      Statuses: Constants.Status,\n      allTypes: Constants.filterTypes,\n      taskStatus: 1\n    };\n    this.convert = this.convert.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.handleTypeSelection = this.handleTypeSelection.bind(this);\n    this.handleStatusSelection = this.handleStatusSelection.bind(this);\n    this.makeTaskCompleted = this.makeTaskCompleted.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.count !== undefined && prevProps.count !== this.props.count || prevProps.checkboxCount !== undefined && prevProps.checkboxCount !== this.props.checkboxCount) {\n      this.setState({\n        tasks: this.props.tasks\n      });\n    }\n  }\n\n  handleTypeSelection(e) {\n    let totalTasks = this.props.tasks;\n\n    if (Number(e.target.value) !== -1) {\n      let allTasks = [];\n      Object.values(totalTasks).map(item => {\n        if (Number(item.type) === Number(e.target.value)) {\n          allTasks.push(item);\n        }\n      });\n      this.setState({\n        tasks: allTasks,\n        typeFilter: e.target.value\n      });\n    } else {\n      this.setState({\n        tasks: totalTasks,\n        typeFilter: e.target.value\n      });\n    }\n  }\n\n  handleStatusSelection(e) {\n    let totalTasks = this.props.tasks;\n\n    if (Number(e.target.value) !== 0) {\n      let allTasks = [];\n      Object.values(totalTasks).map(item => {\n        if (Number(item.status) === Number(e.target.value)) {\n          allTasks.push(item);\n        }\n      });\n      this.setState({\n        tasks: allTasks,\n        statusFilter: e.target.value\n      });\n    } else {\n      this.setState({\n        tasks: totalTasks,\n        statusFilter: e.target.value\n      });\n    }\n  }\n\n  convert(str, id, status) {\n    console.log(id);\n    var todayDate = Date();\n    var date1 = new Date(todayDate); // mnth1 = (\"0\" + (date1.getMonth() + 1)).slice(-2),\n    // day1 = (\"0\" + date1.getDate()).slice(-2),\n    // hours1 = (\"0\" + date1.getHours()).slice(-2),\n    // minutes1 = (\"0\" + date1.getMinutes()).slice(-2),\n    // seconds1 = (\"0\" + date1.getSeconds()).slice(-2);\n    // let dateOne = [date1.getFullYear(), mnth1, day1].join(\"-\")\n    // var timeOne = [hours1, minutes1, seconds1].join(\":\");\n\n    var date = new Date(str); // mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    // day = (\"0\" + date.getDate()).slice(-2),\n    // hours = (\"0\" + date.getHours()).slice(-2),\n    // minutes = (\"0\" + date.getMinutes()).slice(-2),\n    // seconds = (\"0\" + date.getSeconds()).slice(-2);\n    // let dateTwo = [date.getFullYear(), mnth, day].join(\"-\")\n    // var timeTwo = [hours, minutes, seconds].join(\":\");\n\n    let differenceInDays = this.getDifferenceInDays(date1, date);\n    let differenceInHours = this.getDifferenceInHours(date1, date);\n    let differenceInMinutes = this.getDifferenceInMinutes(date1, date);\n    let differenceInSeconds = this.getDifferenceInSeconds(date1, date);\n    console.log(differenceInDays);\n    console.log(differenceInHours);\n    console.log(differenceInMinutes);\n    console.log(differenceInSeconds);\n    let dueDateOfTask = 0;\n\n    if (status !== 2) {\n      if (differenceInDays > 0) {\n        if (differenceInDays > 365) {\n          let dueYears = differenceInDays / 365;\n          dueDateOfTask = \"Due in \" + dueYears + \"Years\";\n        } else if (differenceInDays > 30) {\n          let dueMonths = differenceInDays / 30;\n          dueDateOfTask = \"Due in \" + dueMonths + \"Months\";\n        } else if (differenceInHours > 24) {\n          dueDateOfTask = \"Due in \" + differenceInDays + \"d \" + differenceInHours + \"h\";\n        } else {\n          if (differenceInHours < 1) {\n            dueDateOfTask = \"Due in \" + differenceInMinutes + \"m \";\n            Object.values(this.props.tasks).map(item => {\n              if (item.id === id) {\n                item.color = \"yellow\";\n              }\n            });\n          } else {\n            let dueMinutes = Math.round(differenceInHours / 60);\n            let dueSeconds = Math.round(differenceInMinutes / 60);\n            dueDateOfTask = \"Due in \" + differenceInHours + \"h \" + dueMinutes + \"m \" + dueSeconds + \"s\";\n          }\n        }\n      } else if (differenceInDays === 0) {\n        if (differenceInHours === 0) {\n          if (differenceInMinutes === 0) {\n            if (differenceInSeconds === 0) {\n              dueDateOfTask = \"Due Time Exceed\";\n              Object.values(this.props.tasks).map(item => {\n                if (item.id === id) {\n                  item.color = \"red\";\n                }\n              });\n            } else {\n              dueDateOfTask = \"Due in \" + differenceInSeconds + \"m \";\n              Object.values(this.props.tasks).map(item => {\n                if (item.id === id) {\n                  item.color = \"yellow\";\n                }\n              });\n            }\n          } else {\n            dueDateOfTask = \"Due in \" + differenceInMinutes + \"m \";\n            Object.values(this.props.tasks).map(item => {\n              if (item.id === id) {\n                item.color = \"yellow\";\n              }\n            });\n          }\n        } else {\n          if (differenceInHours < 1) {\n            dueDateOfTask = \"Due in \" + differenceInMinutes + \"m \";\n            Object.values(this.props.tasks).map(item => {\n              if (item.id === id) {\n                item.color = \"yellow\";\n              }\n            });\n          } else {\n            let dueMinutes = Math.round(differenceInHours / 60);\n            let dueSeconds = Math.round(differenceInMinutes / 60);\n            dueDateOfTask = \"Due in \" + differenceInHours + \"h \" + dueMinutes + \"m \" + dueSeconds + \"s\";\n          }\n        }\n      } else {\n        dueDateOfTask = \"Due Time Exceed\";\n        Object.values(this.props.tasks).map(item => {\n          if (item.id === id) {\n            item.color = \"red\";\n          }\n        });\n      }\n    } else {\n      dueDateOfTask = \"Task completed\";\n    }\n\n    return dueDateOfTask;\n  }\n\n  getDifferenceInDays(date1, date2) {\n    // const diffInMs = Math.abs(date2 - date1);\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / (1000 * 60 * 60 * 24));\n  }\n\n  getDifferenceInHours(date1, date2) {\n    // const diffInMs = Math.abs(date2 - date1);\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / (1000 * 60 * 60));\n  }\n\n  getDifferenceInMinutes(date1, date2) {\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / (1000 * 60));\n  }\n\n  getDifferenceInSeconds(date1, date2) {\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / 1000);\n  }\n\n  deleteTask(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id !== id) {\n        allTasks.push(item);\n      }\n    });\n    this.props.updateTasks(allTasks);\n  }\n\n  makeTaskCompleted(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id === id) {\n        // item.Duedate = \"Task completed\"\n        item.taskCompleted = !item.taskCompleted;\n        item.status = item.status === 2 ? 1 : 2; // completed tasks\n      }\n\n      allTasks.push(item);\n    });\n    this.props.updateTasks(allTasks, 0);\n  }\n\n  render() {\n    const {\n      tasks,\n      typeFilter,\n      statusFilter,\n      allTypes,\n      Statuses,\n      taskStatus\n    } = this.state;\n    console.log(tasks);\n    return /*#__PURE__*/_jsxDEV(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: 'Manage tasks'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          border: '3px solid #fff',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '45%',\n            float: 'right',\n            marginbottom: '15px',\n            border: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n            as: \"select\",\n            name: \"typeFilter\",\n            className: \"input_sw\",\n            value: statusFilter,\n            onChange: e => this.handleStatusSelection(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Status : All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), Object.values(Statuses).map(Item => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: Item.id,\n              children: Item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 54\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20%',\n            float: 'right',\n            marginbottom: '15px',\n            border: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n            as: \"select\",\n            name: \"statusFilter\",\n            className: \"input_sw\",\n            value: typeFilter,\n            onChange: e => this.handleTypeSelection(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Type : All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), Object.values(allTypes).map(taskType => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: taskType.id,\n              children: taskType.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 58\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.Form, {\n        style: {\n          width: '600px',\n          height: '200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(reactbootstrap.Table, {\n          style: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#EC661C',\n              color: 'white',\n              position: 'sticky',\n              top: '0',\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: 'center',\n                border: '2px solid black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: 'Name'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: 'Make completed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: 'Delete'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              backgroundColor: 'gray',\n              color: 'white',\n              position: 'sticky',\n              top: '0',\n              textAlign: 'center'\n            },\n            children: Object.values(tasks).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: 'center',\n                border: '2px solid black'\n              },\n              onClick: e => this.props.editTask(item.id),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  backgroundColor: item.color\n                },\n                children: [item.color, item.name, \" \", item.Duedate === \"Task completed\" ? \"Task completed\" : this.convert(item.Duedate, item.id, item.status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  onChange: e => this.makeTaskCompleted(e, item.id),\n                  name: \"makeCompleted\",\n                  checked: item.taskCompleted,\n                  label: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(reactbootstrap.Button, {\n                  style: {\n                    float: 'left',\n                    backgroundColor: '#EC661C',\n                    borderColor: \"black\",\n                    marginBottom: '25px',\n                    marginTop: '25px',\n                    width: '80px'\n                  },\n                  type: \"button\",\n                  onClick: e => this.deleteTask(e, item.id),\n                  children: 'Delete'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ManageTasks;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/ManageTasks.js"],"names":["React","Component","reactbootstrap","Constants","Form","DateDiff","require","ManageTasks","constructor","props","state","tasks","typeFilter","statusFilter","Statuses","Status","allTypes","filterTypes","taskStatus","convert","bind","deleteTask","handleTypeSelection","handleStatusSelection","makeTaskCompleted","componentDidUpdate","prevProps","prevState","count","undefined","checkboxCount","setState","e","totalTasks","Number","target","value","allTasks","Object","values","map","item","type","push","status","str","id","console","log","todayDate","Date","date1","date","differenceInDays","getDifferenceInDays","differenceInHours","getDifferenceInHours","differenceInMinutes","getDifferenceInMinutes","differenceInSeconds","getDifferenceInSeconds","dueDateOfTask","dueYears","dueMonths","color","dueMinutes","Math","round","dueSeconds","date2","diffInMs","trunc","updateTasks","taskCompleted","render","fontSize","width","border","padding","float","marginbottom","Item","name","taskType","height","display","backgroundColor","position","top","textAlign","editTask","Duedate","borderColor","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../commonData/Constants';\nimport { Form } from 'react-bootstrap'\nvar DateDiff = require('date-diff');\n\nclass ManageTasks extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tasks: this.props.tasks,\n      typeFilter: '',\n      statusFilter: '',\n      Statuses: Constants.Status,\n      allTypes: Constants.filterTypes,\n      taskStatus: 1,\n    }\n\n    this.convert = this.convert.bind(this)\n    this.deleteTask = this.deleteTask.bind(this)\n    this.handleTypeSelection = this.handleTypeSelection.bind(this)\n    this.handleStatusSelection = this.handleStatusSelection.bind(this)\n    this.makeTaskCompleted = this.makeTaskCompleted.bind(this)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if ((prevProps.count !== undefined && prevProps.count !== this.props.count) || (prevProps.checkboxCount !== undefined && prevProps.checkboxCount !== this.props.checkboxCount)) {\n      this.setState({\n        tasks: this.props.tasks,\n      })\n    }\n  }\n\n  handleTypeSelection(e) {\n    let totalTasks = this.props.tasks\n    if (Number(e.target.value) !== -1) {\n      let allTasks = [];\n      Object.values(totalTasks).map(item => {\n        if (Number(item.type) === Number(e.target.value)) {\n          allTasks.push(item);\n        }\n      })\n      this.setState({\n        tasks: allTasks,\n        typeFilter: e.target.value,\n      })\n    } else {\n      this.setState({\n        tasks: totalTasks,\n        typeFilter: e.target.value,\n      })\n    }\n  }\n\n  handleStatusSelection(e) {\n    let totalTasks = this.props.tasks\n    if (Number(e.target.value) !== 0) {\n      let allTasks = [];\n      Object.values(totalTasks).map(item => {\n        if (Number(item.status) === Number(e.target.value)) {\n          allTasks.push(item);\n        }\n      })\n      this.setState({\n        tasks: allTasks,\n        statusFilter: e.target.value,\n      })\n    } else {\n      this.setState({\n        tasks: totalTasks,\n        statusFilter: e.target.value,\n      })\n    }\n  }\n\n  convert(str, id, status) {\n    console.log(id);\n    var todayDate = Date();\n    var date1 = new Date(todayDate);\n    // mnth1 = (\"0\" + (date1.getMonth() + 1)).slice(-2),\n    // day1 = (\"0\" + date1.getDate()).slice(-2),\n    // hours1 = (\"0\" + date1.getHours()).slice(-2),\n    // minutes1 = (\"0\" + date1.getMinutes()).slice(-2),\n    // seconds1 = (\"0\" + date1.getSeconds()).slice(-2);\n    // let dateOne = [date1.getFullYear(), mnth1, day1].join(\"-\")\n    // var timeOne = [hours1, minutes1, seconds1].join(\":\");\n    var date = new Date(str);\n    // mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    // day = (\"0\" + date.getDate()).slice(-2),\n    // hours = (\"0\" + date.getHours()).slice(-2),\n    // minutes = (\"0\" + date.getMinutes()).slice(-2),\n    // seconds = (\"0\" + date.getSeconds()).slice(-2);\n    // let dateTwo = [date.getFullYear(), mnth, day].join(\"-\")\n    // var timeTwo = [hours, minutes, seconds].join(\":\");\n\n    let differenceInDays = this.getDifferenceInDays(date1, date);\n    let differenceInHours = this.getDifferenceInHours(date1, date)\n    let differenceInMinutes = this.getDifferenceInMinutes(date1, date)\n    let differenceInSeconds = this.getDifferenceInSeconds(date1, date)\n    console.log(differenceInDays);\n    console.log(differenceInHours);\n    console.log(differenceInMinutes);\n    console.log(differenceInSeconds);\n\n    let dueDateOfTask = 0\n    if (status !== 2) {\n      if (differenceInDays > 0) {\n        if (differenceInDays > 365) {\n          let dueYears = differenceInDays/365\n          dueDateOfTask = \"Due in \" + dueYears + \"Years\"\n        } else if(differenceInDays > 30) {\n          let dueMonths = differenceInDays/30\n          dueDateOfTask = \"Due in \" + dueMonths + \"Months\"\n        } else if(differenceInHours > 24) {\n          dueDateOfTask = \"Due in \" + differenceInDays + \"d \" + differenceInHours + \"h\"\n        } else {\n          if(differenceInHours < 1) {\n            dueDateOfTask = \"Due in \" + differenceInMinutes + \"m \"\n            Object.values(this.props.tasks).map(item => {\n              if (item.id === id) {\n                item.color = \"yellow\"\n              }\n            })\n          } else {\n            let dueMinutes = Math.round(differenceInHours/60)\n            let dueSeconds = Math.round(differenceInMinutes/60)\n            dueDateOfTask = \"Due in \" + (differenceInHours) + \"h \" + dueMinutes + \"m \" + dueSeconds + \"s\"\n          }\n        }\n      } else if(differenceInDays === 0) {\n        if (differenceInHours === 0) {\n          if (differenceInMinutes === 0) {\n            if (differenceInSeconds === 0) {\n              dueDateOfTask = \"Due Time Exceed\"\n              Object.values(this.props.tasks).map(item => {\n                if (item.id === id) {\n                  item.color = \"red\"\n                }\n              })\n            } else {\n              dueDateOfTask = \"Due in \" + (differenceInSeconds) + \"m \"\n              Object.values(this.props.tasks).map(item => {\n                if (item.id === id) {\n                  item.color = \"yellow\"\n                }\n              })\n            }\n          } else {\n            dueDateOfTask = \"Due in \" + (differenceInMinutes) + \"m \"\n            Object.values(this.props.tasks).map(item => {\n              if (item.id === id) {\n                item.color = \"yellow\"\n              }\n            })\n          }\n        } else {\n          if(differenceInHours < 1) {\n            dueDateOfTask = \"Due in \" + differenceInMinutes + \"m \"\n            Object.values(this.props.tasks).map(item => {\n              if (item.id === id) {\n                item.color = \"yellow\"\n              }\n            })\n          } else {\n            let dueMinutes = Math.round(differenceInHours/60)\n            let dueSeconds = Math.round(differenceInMinutes/60)\n            dueDateOfTask = \"Due in \" + (differenceInHours) + \"h \" + dueMinutes + \"m \" + dueSeconds + \"s\"\n          }\n        }\n      } else {\n        dueDateOfTask = \"Due Time Exceed\"\n        Object.values(this.props.tasks).map(item => {\n          if (item.id === id) {\n            item.color = \"red\"\n          }\n        })\n      }\n    } else {\n      dueDateOfTask = \"Task completed\"\n    }\n\n\n    return dueDateOfTask\n  }\n\n  getDifferenceInDays(date1, date2) {\n    // const diffInMs = Math.abs(date2 - date1);\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / (1000 * 60 * 60 * 24));\n  }\n\n  getDifferenceInHours(date1, date2) {\n    // const diffInMs = Math.abs(date2 - date1);\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / (1000 * 60 * 60));\n  }\n\n  getDifferenceInMinutes(date1, date2) {\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / (1000 * 60));\n  }\n\n  getDifferenceInSeconds(date1, date2) {\n    const diffInMs = date2 - date1;\n    return Math.trunc(diffInMs / 1000);\n  }\n\n  deleteTask(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id !== id) {\n        allTasks.push(item);\n      }\n    })\n    this.props.updateTasks(allTasks)\n  }\n\n  makeTaskCompleted(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id === id) {\n        // item.Duedate = \"Task completed\"\n        item.taskCompleted = !item.taskCompleted\n        item.status = (item.status === 2) ? 1 : 2 // completed tasks\n      }\n      allTasks.push(item);\n    })\n    this.props.updateTasks(allTasks, 0)\n  }\n\n  render() {\n    const { tasks, typeFilter, statusFilter, allTypes, Statuses, taskStatus } = this.state\n    console.log(tasks);\n    return(\n      <reactbootstrap.Container className=\"pt-5 px-0\">\n        <div style={{ color: '#EC661C', fontSize: '20px'}} >\n            <span><h4>{'Manage tasks'}</h4></span>\n        </div>\n        <div style={{ width: '100%', border: '3px solid #fff', padding: '20px'}}>\n          <div style={{ width: '45%', float: 'right', marginbottom: '15px',border: '0px' }}>\n            <reactbootstrap.FormControl as=\"select\" name=\"typeFilter\"\n                className=\"input_sw\"\n                value={statusFilter}\n                onChange={e => this.handleStatusSelection(e)} >\n                <option>Status : All</option>\n                {Object.values(Statuses).map(Item => <option value={Item.id}>{Item.name}</option>)}\n            </reactbootstrap.FormControl>\n          </div>\n          <div style={{ width: '20%', float: 'right', marginbottom: '15px',border: '0px' }}>\n            <reactbootstrap.FormControl as=\"select\" name=\"statusFilter\"\n                className=\"input_sw\"\n                value={typeFilter}\n                onChange={e => this.handleTypeSelection(e)} >\n                <option>Type : All</option>\n                {Object.values(allTypes).map(taskType => <option value={taskType.id}>{taskType.name}</option>)}\n            </reactbootstrap.FormControl>\n          </div>\n        </div>\n        <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n          {/* add scroll bar */}\n          <reactbootstrap.Table style={{ display: 'block'}}>\n            <thead style={{ backgroundColor: '#EC661C', color: 'white', position: 'sticky', top: '0', textAlign: 'center' }}>\n                <tr style={{ textAlign: 'center', border: '2px solid black' }}>\n                  <th>{'Name'}</th>\n                  <th>{'Make completed'}</th>\n                  <th>{'Delete'}</th>\n                </tr>\n              </thead>\n              <tbody style={{ backgroundColor: 'gray', color: 'white', position: 'sticky', top: '0', textAlign: 'center' }}>\n                {Object.values(tasks).map((item) => (\n                  <tr style={{ textAlign: 'center', border: '2px solid black' }} onClick = {e => this.props.editTask(item.id)}>\n                     <td style={{ backgroundColor: item.color }}>\n                       {item.color}\n                       {item.name} { item.Duedate === \"Task completed\" ? \"Task completed\" : this.convert(item.Duedate, item.id, item.status) }\n                     </td>\n                     <td>\n                       <Form.Check\n                           onChange={e => this.makeTaskCompleted(e, item.id)}\n                           name='makeCompleted'\n                           checked={item.taskCompleted}\n                           label={\"\"}\n                       />\n                     </td>\n                     <td>\n                       <reactbootstrap.Button style={{ float: 'left', backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={e => this.deleteTask(e, item.id)}>\n                             {'Delete'}\n                       </reactbootstrap.Button>\n                     </td>\n                  </tr>\n                ))}\n              </tbody>\n          </reactbootstrap.Table>\n        </reactbootstrap.Form>\n      </reactbootstrap.Container>\n    )\n  }\n}\n\nexport default (ManageTasks);\n"]},"metadata":{},"sourceType":"module"}