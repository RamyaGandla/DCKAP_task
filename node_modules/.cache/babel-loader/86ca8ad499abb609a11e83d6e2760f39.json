{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/ManageTasks.js\";\nimport React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../commonData/Constants';\nimport { Form } from 'react-bootstrap';\n\nclass ManageTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tasks: Constants.Tasks,\n      tasks: this.props.tasks,\n      makeCompleted: 0,\n      taskTypes: Constants.Types,\n      typeFilter: '',\n      statusFilter: '',\n      Statuses: Constants.Status,\n      allTypes: Constants.filterTypes // tasks: localStorage.getItem('tasks'),\n\n    };\n    this.convert = this.convert.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.handleTypeSelection = this.handleTypeSelection.bind(this);\n    this.handleStatusSelection = this.handleStatusSelection.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.count !== undefined && prevProps.count !== this.props.count || prevProps.checkboxCount !== undefined && prevProps.checkboxCount !== this.props.checkboxCount) {\n      this.setState({\n        tasks: this.props.tasks\n      });\n    }\n  }\n\n  handleTypeSelection(e) {\n    console.log(e.target.value);\n    console.log(this.state.tasks);\n    let totalTasks = this.props.tasks;\n\n    if (Number(e.target.value) !== -1) {\n      let allTasks = [];\n      Object.values(totalTasks).map(item => {\n        if (Number(item.type) === Number(e.target.value)) {\n          allTasks.push(item);\n        }\n      });\n      this.setState({\n        tasks: allTasks\n      });\n    } else {\n      this.setState({\n        tasks: totalTasks\n      });\n    }\n  }\n\n  handleStatusSelection(e) {// const { name, value } = e.target\n    // this.setState({\n    //   [name]: value,\n    //   added: false,\n    // })\n  }\n\n  convert(str) {\n    // let dueDate = str.toLocaleString()\n    // let currentDate = todayDate.toLocaleString()\n    console.log(str.toLocaleString());\n    var todayDate = new Date(); // console.log(todayDate);\n\n    console.log(todayDate.toLocaleString()); // let diff = null\n    // if(todayDate.toLocaleString() > str.toLocaleString()) {\n    //   diff = todayDate.toLocaleString() - str.toLocaleString()\n    // } else {\n    //   diff = str.toLocaleString() - todayDate.toLocaleString()\n    // }\n    // console.log(diff);\n    // Duedate: Thu Oct 01 2020 00:08:00 GMT+0530\n\n    var date = new Date(str),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n        day = (\"0\" + date.getDate()).slice(-2); // console.log(date);\n\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n\n  deleteTask(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id !== id) {\n        allTasks.push(item);\n      }\n    });\n    this.props.updateTasks(allTasks);\n  }\n\n  makeCompleted(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id === id) {\n        item.Duedate = \"Task completed\";\n        item.taskCompleted = !item.taskCompleted;\n      }\n\n      allTasks.push(item);\n    });\n    this.props.updateTasks(allTasks, 0);\n  }\n\n  render() {\n    const {\n      tasks,\n      makeCompleted,\n      taskTypes,\n      typeFilter,\n      statusFilter,\n      allTypes,\n      Statuses\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(reactbootstrap.Container, {\n      className: \"pt-5 px-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#EC661C',\n          fontSize: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: 'Manage tasks'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          border: '3px solid #fff',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '45%',\n            float: 'right',\n            marginbottom: '15px',\n            border: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n            as: \"select\",\n            name: \"typeFilter\",\n            className: \"input_sw\",\n            value: typeFilter,\n            onChange: e => this.handleStatusSelection(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Status : All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), Object.values(Statuses).map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.id,\n              children: status.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 56\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '20%',\n            float: 'right',\n            marginbottom: '15px',\n            border: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(reactbootstrap.FormControl, {\n            as: \"select\",\n            name: \"statusFilter\",\n            className: \"input_sw\",\n            value: statusFilter,\n            onChange: e => this.handleTypeSelection(e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Type : All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), Object.values(allTypes).map(taskType => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: taskType.id,\n              children: taskType.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 58\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(reactbootstrap.Form, {\n        style: {\n          width: '600px',\n          height: '200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(reactbootstrap.Table, {\n          style: {\n            display: 'block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#EC661C',\n              color: 'white',\n              position: 'sticky',\n              top: '0',\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: 'center',\n                border: '2px solid black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: 'Name'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: 'Make completed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: 'Delete'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              backgroundColor: 'gray',\n              color: 'white',\n              position: 'sticky',\n              top: '0',\n              textAlign: 'center'\n            },\n            children: Object.values(tasks).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                textAlign: 'center',\n                border: '2px solid black'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.name, \" \", \"(Due in )\", \" \", item.Duedate === \"Task completed\" ? \"Task completed\" : this.convert(item.Duedate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  onChange: e => this.makeCompleted(e, item.id),\n                  name: \"makeCompleted\" // disabled={active_disable}\n                  ,\n                  checked: item.taskCompleted,\n                  label: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(reactbootstrap.Button, {\n                  style: {\n                    float: 'left',\n                    backgroundColor: '#EC661C',\n                    borderColor: \"black\",\n                    marginBottom: '25px',\n                    marginTop: '25px',\n                    width: '80px'\n                  },\n                  type: \"button\",\n                  onClick: e => this.deleteTask(e, item.id),\n                  children: 'Delete'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ManageTasks;","map":{"version":3,"sources":["/home/ramya/PersonalProjects/DCKAP_task/src/Tasks/ManageTasks.js"],"names":["React","Component","reactbootstrap","Constants","Form","ManageTasks","constructor","props","state","tasks","makeCompleted","taskTypes","Types","typeFilter","statusFilter","Statuses","Status","allTypes","filterTypes","convert","bind","deleteTask","handleTypeSelection","handleStatusSelection","componentDidUpdate","prevProps","prevState","count","undefined","checkboxCount","setState","e","console","log","target","value","totalTasks","Number","allTasks","Object","values","map","item","type","push","str","toLocaleString","todayDate","Date","date","mnth","getMonth","slice","day","getDate","getFullYear","join","id","updateTasks","Duedate","taskCompleted","render","color","fontSize","width","border","padding","float","marginbottom","status","name","taskType","height","display","backgroundColor","position","top","textAlign","borderColor","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as reactbootstrap from 'react-bootstrap';\nimport { Constants } from '../commonData/Constants';\nimport { Form } from 'react-bootstrap'\n\nclass ManageTasks extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // tasks: Constants.Tasks,\n      tasks: this.props.tasks,\n      makeCompleted: 0,\n      taskTypes: Constants.Types,\n      typeFilter: '',\n      statusFilter: '',\n      Statuses: Constants.Status,\n      allTypes: Constants.filterTypes,\n      // tasks: localStorage.getItem('tasks'),\n    }\n\n    this.convert = this.convert.bind(this)\n    this.deleteTask = this.deleteTask.bind(this)\n    this.handleTypeSelection = this.handleTypeSelection.bind(this)\n    this.handleStatusSelection = this.handleStatusSelection.bind(this)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if ((prevProps.count !== undefined && prevProps.count !== this.props.count) || (prevProps.checkboxCount !== undefined && prevProps.checkboxCount !== this.props.checkboxCount)) {\n      this.setState({\n        tasks: this.props.tasks,\n      })\n    }\n  }\n\n  handleTypeSelection(e) {\n    console.log(e.target.value);\n    console.log(this.state.tasks);\n    let totalTasks = this.props.tasks\n    if (Number(e.target.value) !== -1) {\n      let allTasks = [];\n      Object.values(totalTasks).map(item => {\n        if (Number(item.type) === Number(e.target.value)) {\n          allTasks.push(item);\n        }\n      })\n      this.setState({\n        tasks: allTasks,\n      })\n    } else {\n      this.setState({\n        tasks: totalTasks,\n      })\n    }\n  }\n\n  handleStatusSelection(e) {\n    // const { name, value } = e.target\n    // this.setState({\n    //   [name]: value,\n    //   added: false,\n    // })\n  }\n\n  convert(str) {\n    // let dueDate = str.toLocaleString()\n    // let currentDate = todayDate.toLocaleString()\n    console.log(str.toLocaleString());\n    var todayDate = new Date();\n    // console.log(todayDate);\n    console.log(todayDate.toLocaleString());\n    // let diff = null\n    // if(todayDate.toLocaleString() > str.toLocaleString()) {\n    //   diff = todayDate.toLocaleString() - str.toLocaleString()\n    // } else {\n    //   diff = str.toLocaleString() - todayDate.toLocaleString()\n    // }\n    // console.log(diff);\n    // Duedate: Thu Oct 01 2020 00:08:00 GMT+0530\n    var date = new Date(str),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    // console.log(date);\n    return [date.getFullYear(), mnth, day].join(\"-\");\n  }\n\n  deleteTask(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id !== id) {\n        allTasks.push(item);\n      }\n    })\n    this.props.updateTasks(allTasks)\n  }\n\n  makeCompleted(e, id) {\n    let allTasks = [];\n    Object.values(this.props.tasks).map(item => {\n      if (item.id === id) {\n          item.Duedate = \"Task completed\"\n        item.taskCompleted = !item.taskCompleted\n      }\n      allTasks.push(item);\n    })\n    this.props.updateTasks(allTasks, 0)\n  }\n\n  render() {\n    const { tasks, makeCompleted, taskTypes, typeFilter, statusFilter, allTypes, Statuses } = this.state\n\n    return(\n      <reactbootstrap.Container className=\"pt-5 px-0\">\n        <div style={{ color: '#EC661C', fontSize: '20px'}} >\n            <span><h4>{'Manage tasks'}</h4></span>\n        </div>\n        <div style={{ width: '100%', border: '3px solid #fff', padding: '20px'}}>\n          <div style={{ width: '45%', float: 'right', marginbottom: '15px',border: '0px' }}>\n            <reactbootstrap.FormControl as=\"select\" name=\"typeFilter\"\n                className=\"input_sw\"\n                value={typeFilter}\n                onChange={e => this.handleStatusSelection(e)} >\n                <option>Status : All</option>\n                {Object.values(Statuses).map(status => <option value={status.id}>{status.name}</option>)}\n            </reactbootstrap.FormControl>\n          </div>\n          <div style={{ width: '20%', float: 'right', marginbottom: '15px',border: '0px' }}>\n            <reactbootstrap.FormControl as=\"select\" name=\"statusFilter\"\n                className=\"input_sw\"\n                value={statusFilter}\n                onChange={e => this.handleTypeSelection(e)} >\n                <option>Type : All</option>\n                {Object.values(allTypes).map(taskType => <option value={taskType.id}>{taskType.name}</option>)}\n            </reactbootstrap.FormControl>\n          </div>\n        </div>\n        <reactbootstrap.Form style={{ width: '600px', height: '200px'}}>\n          {/* add scroll bar */}\n          <reactbootstrap.Table style={{ display: 'block'}}>\n            <thead style={{ backgroundColor: '#EC661C', color: 'white', position: 'sticky', top: '0', textAlign: 'center' }}>\n                <tr style={{ textAlign: 'center', border: '2px solid black' }}>\n                  <th>{'Name'}</th>\n                  <th>{'Make completed'}</th>\n                  <th>{'Delete'}</th>\n                </tr>\n              </thead>\n              <tbody style={{ backgroundColor: 'gray', color: 'white', position: 'sticky', top: '0', textAlign: 'center' }}>\n                {Object.values(tasks).map((item) => (\n                  <tr style={{ textAlign: 'center', border: '2px solid black' }}>\n                     <td>{item.name} {\"(Due in )\"} { item.Duedate === \"Task completed\" ? \"Task completed\" : this.convert(item.Duedate) }</td>\n                     <td>\n                       <Form.Check\n                           onChange={e => this.makeCompleted(e, item.id)}\n                           name='makeCompleted'\n                           // disabled={active_disable}\n                           checked={item.taskCompleted}\n                           label={\"\"}\n                       />\n                     </td>\n                     <td>\n                       <reactbootstrap.Button style={{ float: 'left', backgroundColor: '#EC661C',borderColor: \"black\", marginBottom: '25px', marginTop: '25px', width: '80px' }} type=\"button\" onClick={e => this.deleteTask(e, item.id)}>\n                             {'Delete'}\n                       </reactbootstrap.Button>\n                     </td>\n                  </tr>\n                ))}\n              </tbody>\n          </reactbootstrap.Table>\n        </reactbootstrap.Form>\n      </reactbootstrap.Container>\n    )\n  }\n}\n\nexport default (ManageTasks);\n"]},"metadata":{},"sourceType":"module"}